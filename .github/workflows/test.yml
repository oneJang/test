name: test
on:
  push:
    branches: [ "user" ]
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
    - name: sourcecode CheckOut
      uses: actions/checkout@v3
    
    - name: Set up
      uses: actions/checkout@v3 # Repository로부터 CI 수행 서버로 코드를 내려받는 Action
    
    - name: Set up JDK 11 # step의 이름
      uses: actions/setup-java@v3 # jdk를 다운 받고 캐싱해주는 Action
      with: # Action에 전달하는 input을 정의하는 곳
        java-version: 11
        distribution: 'temurin'
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: |
          user-service/gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.jar', '**/gradle-wrapper.properties') }}
    - name: location
      run: pwd
    - name: move
      run: cd /user-service  
    - name: Build
      if: steps.cache.outputs.cache-hit != 'true'
      run: user-service/gradlew build
    - name: Set-var
      id: set-var
      run: |
        echo ::set-output name=REGISTRY::chungjm0711
        echo ::set-output name=REPOSITORY::take-it-svc-user-service-amd64
        echo ::set-output name=TAG::3.0
    - name: docker image build
      run: docker build \ 
          -t ${{ steps.set-var.outputs.REGISTRY }}/${{ steps.set-var.outputs.REPOSITORY }}:${{ steps.set-var.outputs.TAG}} .    

